{
  "Create Issuance (fetch)": {
    "description": "Create bulk issuance entity (using fetch)",
    "prefix": "create-issuance-fetch",
    "body": [
      "type CreateIssuanceResponse = { id: string };",
      "type ApiOperationError = { code: string; message: string };",
      "",
      "const response = await fetch('https://console-vc-issuance.apse1.affinidi.com/api/v1/issuances', {",
      "  method: 'POST',",
      "  headers: {",
      "    'Content-Type': 'application/json',",
      "    'Api-Key': '${1:Paste your API key here}',",
      "  },",
      "  body: JSON.stringify({",
      "    projectId: '${2:Paste your Project ID here}',",
      "    template: {",
      "      issuerDid: '${3:Paste your Wallet DID here}',",
      "      schema: {",
      "        type: '${4:MySchema}',",
      "        jsonLdContextUrl: 'https://schema.affinidi.com/$4V${5:1-0}.jsonld',",
      "        jsonSchemaUrl: 'https://schema.affinidi.com/$4V${5:1-0}.json',",
      "      },",
      "      verification: {",
      "        method: 'email',",
      "      }",
      "    }",
      "  })",
      "});",
      "",
      "const data: CreateIssuanceResponse | ApiOperationError = await response.json();",
      "if ('id' in data) {",
      "  console.log('Issuance ID:', data.id);",
      "} else {",
      "  console.log('Could not create an issuance:', data.code, data.message);",
      "}"
    ]
  },
  "Create Issuance (axios)": {
    "description": "Create bulk issuance entity (using axios)",
    "prefix": "create-issuance-axios",
    "body": [
      "type CreateIssuanceResponse = { id: string };",
      "type ApiOperationError = { code: string; message: string };",
      "",
      "try {",
      "  const { data } = await axios<CreateIssuanceResponse>({",
      "    url: 'https://console-vc-issuance.apse1.affinidi.com/api/v1/issuances',",
      "    method: 'post',",
      "    headers: {",
      "      'Content-Type': 'application/json',",
      "      'Api-Key': '${1:Paste your API key here}',",
      "    },",
      "    data: {",
      "      projectId: '${2:Paste your Project ID here}',",
      "      template: {",
      "        issuerDid: '${3:Paste your Wallet DID here}',",
      "        schema: {",
      "          type: '${4:MySchema}',",
      "          jsonLdContextUrl: 'https://schema.affinidi.com/$4V${5:1-0}.jsonld',",
      "          jsonSchemaUrl: 'https://schema.affinidi.com/$4V${5:1-0}.json',",
      "        },",
      "        verification: {",
      "          method: 'email',",
      "        }",
      "      }",
      "    }",
      "  });",
      "",
      "  console.log('Issuance ID:', data.id);",
      "} catch (error) {",
      "  const { code, message }: ApiOperationError = error.response.data;",
      "  console.log('Could not create an issuance:', code, message);",
      "}"
    ]
  },
  "Create Offer (fetch)": {
    "description": "Create & send bulk issuance offer (using fetch)",
    "prefix": "create-offer-fetch",
    "body": [
      "type CreateOfferResponse = { id: string };",
      "type ApiOperationError = { code: string; message: string; context?: { errors?: { field: string; name: string; message: string }[] } };",
      "",
      "const response = await fetch(`https://console-vc-issuance.apse1.affinidi.com/api/v1/issuances/${1:Issuance ID}/offers`, {",
      "  method: 'POST',",
      "  headers: {",
      "    'Content-Type': 'application/json',",
      "    'Api-Key': '${2:Paste your API key here}',",
      "  },",
      "  body: JSON.stringify({",
      "    credentialSubject: {",
      "      ${3:name: {",
      "        firstName: 'John',",
      "        lastName: 'Doe'",
      "      \\},",
      "      dateOfBirth: '1990-01-01'}",
      "    },",
      "    verification: {",
      "      target: {",
      "        email: '${4:email@example.com}'",
      "      }",
      "    }",
      "  })",
      "});",
      "",
      "const data: CreateOfferResponse | ApiOperationError = await response.json();",
      "if ('id' in data) {",
      "  console.log('Offer ID:', data.id);",
      "} else if (data.code === 'VIS-10') {",
      "  console.log('Issuance has not been found');",
      "} else if (data.code === 'VIS-18') {",
      "  console.log('Credential subject is invalid, errors:', data.context?.errors);",
      "} else {",
      "  console.log('Could not create an offer:', data.code, data.message);",
      "}"
    ]
  },
  "Create Offer (axios)": {
    "description": "Create & send bulk issuance offer (using axios)",
    "prefix": "create-offer-axios",
    "body": [
      "type CreateOfferResponse = { id: string };",
      "type ApiOperationError = { code: string; message: string; context?: { errors?: { field: string; name: string; message: string }[] } };",
      "",
      "try {",
      "  const { data } = await axios<CreateOfferResponse>({",
      "    url: `https://console-vc-issuance.apse1.affinidi.com/api/v1/issuances/${1:Issuance ID}/offers`,",
      "    method: 'post',",
      "    headers: {",
      "      'Content-Type': 'application/json',",
      "      'Api-Key': '${2:Paste your API key here}',",
      "    },",
      "    data: {",
      "      credentialSubject: {",
      "        ${3:name: {",
      "          firstName: 'John',",
      "          lastName: 'Doe'",
      "        \\},",
      "        dateOfBirth: '1990-01-01'}",
      "      },",
      "      verification: {",
      "        target: {",
      "          email: '${4:email@example.com}'",
      "        }",
      "      }",
      "    }",
      "  });",
      "",
      "  console.log('Offer ID:', data.id);",
      "} catch (error) {",
      "  const { code, message, context }: ApiOperationError = error.response.data;",
      "",
      "  if (code === 'VIS-10') {",
      "    console.log('Issuance has not been found');",
      "  } else if (code === 'VIS-18') {",
      "    console.log('Credential subject is invalid, errors:', context?.errors);",
      "  } else {",
      "    console.log('Could not create an offer:', code, message);",
      "  }",
      "}",
    ]
  }
}