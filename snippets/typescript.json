{
  "Create Issuance (fetch)": {
    "description": "Create bulk issuance entity (using fetch)",
    "prefix": "affinidi-create-issuance",
    "body": [
      "const apiKeyHash = '${1:Paste your API key here}';",
      "const projectId = '${2:Paste your Project ID here}';",
      "const issuerDid = '${3:Paste your Wallet DID here}';",
      "// use Schema Manager to find or create a schema for your VC",
      "const schema = {",
      "  type: '${4:MySchema}',",
      "  jsonLdContextUrl: 'https://schema.affinidi.com/$4V${5:1-0}.jsonld',",
      "  jsonSchemaUrl: 'https://schema.affinidi.com/$4V${5:1-0}.json',",
      "};",
      "",
      "type CreateIssuanceResponse = { id: string };",
      "type ApiOperationError = { code: string; message: string };",
      "",
      "const response = await fetch('https://console-vc-issuance.apse1.affinidi.com/api/v1/issuances', {",
      "  method: 'POST',",
      "  headers: {",
      "    'Api-Key': apiKeyHash,",
      "    'Content-Type': 'application/json',",
      "    'Referrer-Policy': 'no-referrer',",
      "    'Cache-Control': 'no-store, max-age=0',",
      "  },",
      "  body: JSON.stringify({",
      "    projectId,",
      "    template: {",
      "      issuerDid,",
      "      schema,",
      "      verification: {",
      "        // claim link will be sent by email",
      "        method: 'email',",
      "      }",
      "    }",
      "  })",
      "});",
      "",
      "const data: CreateIssuanceResponse | ApiOperationError = await response.json();",
      "if ('id' in data) {",
      "  console.log('Issuance ID:', data.id);",
      "} else {",
      "  console.log('Could not create an issuance:', data.code, data.message);",
      "}"
    ]
  },
  "Create Offer (fetch)": {
    "description": "Create & send bulk issuance offer (using fetch)",
    "prefix": "affinidi-create-offer",
    "body": [
      "const apiKeyHash = '${1:Paste your API key here}';",
      "const issuanceId = '${2:Paste your Issuance ID here}';",
      "",
      "type CreateOfferResponse = { id: string };",
      "type ApiOperationError = { code: string; message: string; context?: { errors?: { field: string; name: string; message: string }[] } };",
      "",
      "const response = await fetch(`https://console-vc-issuance.apse1.affinidi.com/api/v1/issuances/\\${issuanceId}/offers`, {",
      "  method: 'POST',",
      "  headers: {",
      "    'Api-Key': '${2:Paste your API key here}',",
      "    'Content-Type': 'application/json',",
      "    'Referrer-Policy': 'no-referrer',",
      "    'Cache-Control': 'no-store, max-age=0',",
      "  },",
      "  body: JSON.stringify({",
      "    // should match fields in VC Schema, specified in the Issuance template",
      "    credentialSubject: {",
      "      ${3:name: {",
      "        firstName: 'John',",
      "        lastName: 'Doe'",
      "      \\},",
      "      dateOfBirth: '1990-01-01'}",
      "    },",
      "    verification: {",
      "      target: {",
      "        // VC claim link will be sent here",
      "        email: '${4:email@example.com}'",
      "      }",
      "    }",
      "  })",
      "});",
      "",
      "const data: CreateOfferResponse | ApiOperationError = await response.json();",
      "if ('id' in data) {",
      "  console.log('Offer ID:', data.id);",
      "} else if (data.code === 'VIS-10') {",
      "  console.log('Issuance has not been found');",
      "} else if (data.code === 'VIS-18') {",
      "  console.log('Credential subject is invalid, validation errors:', data.context?.errors);",
      "} else {",
      "  console.log('Could not create an offer:', data.code, data.message);",
      "}"
    ]
  }
}